server.port=8085

spring.datasource.url= jdbc:postgresql://172.17.0.2:5432/urlfeederservice
#spring.datasource.url= jdbc:postgresql://127.0.0.1:5433/urlfeederservice
spring.datasource.username= postgres
spring.datasource.password= arsenal

spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation= true
spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.PostgreSQLDialect


# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.show-sql= true
spring.jpa.hibernate.ddl-auto= create
spring.jpa.generate-ddl= true
spring.jpa.hibernate.naming_strategy= org.hibernate.cfg.ImprovedNamingStrategy

spring.kafka.producer.bootstrap-servers=172.17.0.1:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

com.lemonade.urlfeederservice.topics={'text/html':'html_topic','image/jpeg':'jpg_topic','application/pdf':'pdf_topic'}

# number of day we allow the url to reprocess
com.lemonade.FeederService.service.cooldown=7